#pragma once

using namespace System;
using namespace System::Collections;
using namespace System::Runtime::Serialization;
using namespace System::IO;

[Serializable]
ref class WrapEqualityComparer : public IEqualityComparer, public ISerializable
{
	IComparer^ _comparer;
	IHashCodeProvider^ _hcp;

public:
	WrapEqualityComparer(IComparer^ comparer, IHashCodeProvider^ hcp)
	{
		_comparer = comparer;
		_hcp = hcp;
	}

	virtual bool Equals(Object^ x, Object^ y)
	{
		Console::WriteLine("In Equals");
		return x->Equals(y);
	}

	virtual int GetHashCode(Object^ x)
	{
		Console::WriteLine("In GetHashCode");
		return x->GetHashCode();
	}

	virtual void GetObjectData(SerializationInfo^ info, StreamingContext ctx)
	{
		Console::WriteLine("In GetObjectData");

		info->SetType(Type::typeid->Assembly->GetType("System.Collections.CompatibleComparer"));
		
		info->AddValue("_comparer", _comparer);
		info->AddValue("_hcp", _hcp);
	}
};

