#pragma once

using namespace System;
using namespace System::Collections;
using namespace System::Runtime::Serialization;
using namespace System::IO;

[Serializable]
ref class WrapHashCodeProvider : public IHashCodeProvider, public ISerializable
{
	array<unsigned char>^ _marshalledData;

public:
	WrapHashCodeProvider(IUnknown* pUnk);

	virtual int GetHashCode(Object^ obj)
	{
		return obj->GetHashCode();
	}

	virtual void GetObjectData(SerializationInfo^ info, StreamingContext ctx)
	{
		Console::WriteLine("In GetObjectData");

		info->AssemblyName = "System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a";
		info->FullTypeName = "System.EnterpriseServices.ComObjRef";

		MemoryStream^ stm = gcnew MemoryStream();
		BinaryWriter^ writer = gcnew BinaryWriter(stm);

		writer->Write((unsigned int)0);
		writer->Write(_marshalledData);

		info->AddValue("buffer", stm->ToArray());
	}
};

